事件脚本文件的格式・指令列表
2013/01/20


【基本格式】

	[(事件名)]
	Begin
		(指令)[(Tab×n)(参数)]×n  ;; (注释)
	End

	※ 脚本文件必须采用UTF-8 编码。字节顺序标记 (BOM) 可以不添加。
	※ Begin，End，以及各个指令对大小写不敏感，但是必须采用半角文字。指令的参数基本上对大小写敏感。
	※ 事件名在其之后最初出现用于指定事件的名称。有时也可以省略，这种情况下则无法通过 evaluate-event 指令来指定。
	※ 位于Begin～End 区域外的文字除了事件名的设定其他一律被忽略。
	※ Begin～End 内部 (包含Begin行, End 行) 采用两个连续分号开头表示注释。
	※ 行首缩进无特殊要求。空格(半角/全角)和制表符都 OK。
	※ 指令和参数，参数和参数之间用制表符分开。允许使用多个制表符但不允许混杂使用空格符。
	※ target，prologue，condition，continue，evaluate-event 属于“特殊指令”，可以在Begin～End 内部的任意处书写。
	※ 其他指令由于会从上往下顺序执行，所以要注意书写的顺序。
	※ 通过参数指定对象的名字时，必须在Unity 编辑器上的检视面板中附加到 BaseObject 类或者其派生类。

【target (特殊指令)】

	target (Tab) (对象名)
	添加事件的发生对象

	※ 和target 指定的对象发生接触时该事件成为发生对象。
	※ 对象名对大小写敏感。
	※ 对象名还可以使用通配符半角星号 * 来指定，所有的对象都可以作为发生对象。
	※ 通过 condition 指定了条件后，可能存在target一致但不发生事件的情况。
	※ target 可以指定超过 3个对象。只指定1个的情况下事件的描述本身会被忽略。

【prologue (特殊指令)】

	prologue
	开场事件 (不是和对象接触而是读入脚本时执行的事件) 

	※ 如果事件被指定 prologue 成为“开场事件”后，将成为读入脚本时进行评价，执行的特殊事件。
	※ 开场事件能够替换target 的指定，被指定为prologue 后target 将全部无效。
	※ condition 和 continue 的描述仍有效。
	※ 不使用EventManager 的 Initial Deactive Objects ，虽然能够通过开场事件来隐藏对象，在开始的一瞬间也许能够被看见。

【condition (特殊指令)】

	condition (Tab) (对象名) (Tab) (变量名) (Tab) (値)
	追加事件的发生条件

	※ 向通过target 指定的对象发生接触时发生的事件添加条件。
	※ 如果游戏内变量的值等于这里指定的值则事件触发。请参考“游戏内参数”部分的 set 指令。
	※ 对象名，变量名都对大小写敏感。
	※ condition 指定的游戏内变量如果未定义（未执行set指令），则被视作等于字符串"0" 。
	※ condition 可以不指定。也可以指定两个以上，这种情况下如果所有的 condition 都被满足，事件将发生。

【continue (特殊指令)】

	continue
	对事件进行继续评价

	※ 基本上 target 或者 prologue 以及 condition 指定一致的事件只有1个会执行。
	※ 不过不光用 continue 书写的事件会被执行，其后续记录的事件都会被执行。
	※ 为了能够继续“评价”，由于condition 的条件检测将会被执行，target 的对象检测和开场事件的检测，有可能最终不会被执行。

【evaluate-event (特殊指令)】

	evaluate-event (Tab) (事件名)
	连续执行事件结束时指定的事件

	※ 事件名对大小写敏感。
	※ 该指令描述的事件结束后，将继续执行指定的事件。
	※ 事件能够继续执行，这和continue 指令是一样的，不过之前的事件也能作为执行对象这是不一样的地方。

【set】

	set (Tab) (对象名) (Tab) (变量名) (Tab) (值)
	将字符串代入游戏内变量

	※ 该指令使用的各个对象名称以及值组成的字符串可以被保存起来，这被称作“游戏内变量”。
	※ 对象名，变量名都是大小写敏感的。
	※ 已经被定义过的游戏内变量将被覆盖。
	※ 这个指令很快就被执行完成。

【move】

	move (Tab) (对象名) (Tab) (对象名) (Tab) (秒数)
	移动游戏对象

	※ 第一个参数指定的对象经过指定的秒数后移动到第2个参数指定的对象处。
	※ 如果使用添加了BaseObject 类的空对象，能够移动到没有对象占用的地方。
	※ 当超过指定的描述后该指令将继续执行。

【hide】

	hide (Tab) (对象名)
	隐藏指定的游戏对象

	※ 对象名对大小写敏感。
	※ 这个指令很快就被执行完成。

【show】

	show (Tab) (对象名)
	显示指定的游戏对象

	※ 对象名对大小写敏感。
	※ 这个指令很快就被执行完成。
	※ 对于从游戏启动开始就一直被隐藏的对象，需要注册到EventManager 的 Initial Deactive Objects 。

【text】

	text (Tab) (字符串) [ (Tab) (字符串) ]×n
	显示说明文字

	※ 在画面下方的中央显示说明文字（剧情）。使用制表符来分割多行。
	※ 执行该指令后，在用户点击鼠标前处理将被暂停，点击后说明文字消失。
	※ 不过如果下一指令是 choice，则当处理暂停时说明文字不会消失，立刻结束执行。

【dialog】

	dialog (Tab) (对象名) (Tab) (字符串) [ (Tab) (字符串) ]×n
	显示对话的文字

	※ 在被指定对象的近处通过气泡来显示对话的文字。对象名对大小写敏感。
	※ 气泡出现的位置是通过自动计算得出的，无法使用脚本来指定。
	※ 和text 指令相同，允许使用制表符来表示多行。
	※ 执行该指令后，直到玩家点击鼠标前处理将被暂停，点击后对话文字将被消除。
	※ 不过只有当下一个指令为 choice 时，处理暂停后对话文字将不会被消除，立刻执行完毕。

【choice】

	choice (Tab) (对象名) (Tab) (变量名) [ (Tab) (选择项) ]×n
	显示选择项并且根据选择内容将对应的值代入游戏内变量

	※ 对象名对大小写敏感。
	※ 需要指定1个以上的选择项，从上开始显示。
	※ 最上面的选项被选中后为1,第2个选项表示2，第3项为3 ... 以此类推代入游戏内变量。
	※ 代入的值范围从1开始，当选项未被选中时游戏内变量被 condition 等指令访问时显示为未定义，也就是说值为0。
	※ 根据选项而做出的分支处理使用了 continue ，显示选项事件之后，可以用condition描述代入值的游戏内变量。
	※ 该指令将暂停用户点击选择项时的处理，当点击后选择项会被消除。
	※ 这时候如果存在由text 指令，dialog 指令显示的说明文字或对话文字，也都将被消除。

【play】

	play (Tab) (音效名) [ (Tab) loop ]
	播放音效

	※ 音效名对大小写敏感。
	※ 只有SoundManager 类的 m_audioClips 指定的音效可以被该指令指定。
	※ 音效是一次性播放的，开始播放后将很快结束。
	※ 不过在音效名后指定 loop 可以循环播放。

【fadeout】

	fadeout (Tab) (秒数)
	执行淡出

	※ 经过指定的秒数使画面慢慢变暗。
	※ 这个指令在经过指定的秒数后继续执行。

【fadein】

	fadein (Tab) (时间)
	执行淡入

	※ 淡入状态下，经过指定的秒数使画面慢慢回到通常的状态。
	※ 这个指令在经过指定的秒数后继续执行。

【load】

	load (Tab) (文件名) [ (Tab) (文件名) ]×n
	读入脚本替换事件

	※ 游戏开始时从 GlobalParam 类的startScripts 所指定的脚本中读入事件信息。
	※ 这个指令从指定的脚本读取事件信息，替换原有的事件信息。
	※ 文件名是否对大小写敏感取决于运行的环境，一般来说Windows 环境下不作大小写区分。
	※ 允许指定多个文件，不过由于事件信息是逐个追加的，因此先指定文件的事件处理更加优先。
	※ 替换事件信息在所有的事件评价／执行后进行。
	※ 可以通过continue指定含有本指令的事件来进行继续评价。
	※ 在事件评价／执行中使用load指令多次执行时，后面执行的事件信息将覆盖前面的。
	※ 该指令会很快被执行完成。

【call-event】

	call-event (Tab) (事件名)
	指令在执行过程中强行执行其他事件

	※ 事件名对大小写敏感。
	※ 当这个指令被执行时，将中断当前执行的事件，执行被指定的其他事件。
	※ 该指令的执行会很快完成。
	※ 事件可以继续执行的时点和 continue 指令类似，不过可以将之间的事件作为执行对象，和不执行评价强制执行是不同的。

【message】

	message (Tab) (对象名) (Tab) (消息的种类) [ (Tab) (参数) ]×n
	向对象传递消息并执行固有的处理

	※ 对象名对大小写敏感。消息的种类是否大小写敏感依赖于具体的实现。
	※ 为了能够执行对象固有的处理，向对象传递参数。
	※ 执行该指令的对象，需要继承于BaseObject ，并附加了重载了UpdateMessage 方法的派生类组件。
